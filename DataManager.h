/*!
*Generated by DataManagerGenerator, do not edit manualy
*@file DataManager.h
*@date 2022-10-29
*@author n.kessa
*@brief Manages device global configurations and device data flow between software modules.
*
*/

#ifndef DATAMANAGER_H 
#define DATAMANAGER_H 

#ifdef __cplusplus 
extern "C" 
{ 
#endif		/* __cplusplus */ 
#include <stdint.h>
#include <stdbool.h>
/*****************************start of ui32_var3 definitions*************************************/
/*provide access to ui32_var3, define setter and getter and notification*/
/*setter*/
void DataManager_set_ui32_var3(uint32_t x);
/*getter*/
uint32_t DataManager_get_ui32_var3();
/*define call back function type*/
typedef  void (* ui32_var3_callback_t)(uint32_t);
/*setter of call back function*/
void DataManager_set_ui32_var3_callback(ui32_var3_callback_t i);


/*****************************end of ui32_var3 definitions*************************************/

/*****************************start of ui32_var1 definitions*************************************/
/*provide access to ui32_var1, define setter and getter*/
extern uint32_t ui32_var1;
#define DataManager_set_ui32_var1(x) { ui32_var1 = x ; }
#define DataManager_get_ui32_var1()(ui32_var1)


/*****************************end of ui32_var1 definitions*************************************/

/*****************************start of ui32_var2 definitions*************************************/
/*provide access to ui32_var2, define setter and getter*/
extern uint32_t ui32_var2;
#define DataManager_set_ui32_var2(x) { ui32_var2 = x ; }
#define DataManager_get_ui32_var2()(ui32_var2)


/*****************************end of ui32_var2 definitions*************************************/

/*****************************start of ui32_var4 definitions*************************************/
/*provide access to ui32_var4, define setter and getter and notification*/
/*setter*/
void DataManager_set_ui32_var4(uint32_t x);
/*getter*/
uint32_t DataManager_get_ui32_var4();
/*define call back function type*/
typedef  void (* ui32_var4_callback_t)(uint32_t);
/*setter of call back function*/
void DataManager_set_ui32_var4_callback(ui32_var4_callback_t i);


/*****************************end of ui32_var4 definitions*************************************/

/*****************************start of is_var4 definitions*************************************/
/*provide access to is_var4, define setter and getter and notification*/
/*setter*/
void DataManager_set_is_var4(bool x);
/*getter*/
bool DataManager_get_is_var4();
/*define call back function type*/
typedef  void (* is_var4_callback_t)(bool);
/*setter of call back function*/
void DataManager_set_is_var4_callback(is_var4_callback_t i);


/*****************************end of is_var4 definitions*************************************/

#ifdef __cplusplus
}
#endif		/* __cplusplus */
#endif /* DATAMANAGER_H */ 
